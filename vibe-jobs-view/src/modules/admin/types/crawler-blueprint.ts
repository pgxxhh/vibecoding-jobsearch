export type CrawlerBlueprintStatus = 'DRAFT' | 'READY' | 'ACTIVE' | 'FAILED' | string;

export type CrawlerBlueprintTaskStatus =
  | 'PENDING'
  | 'RUNNING'
  | 'SUCCEEDED'
  | 'FAILED'
  | string;

export interface CrawlerBlueprintSummary {
  code: string;
  name: string;
  entryUrl: string;
  enabled: boolean;
  status?: CrawlerBlueprintStatus | null;
  autoGenerated?: boolean | null;
  generatedBy?: string | null;
  generatedAt?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
}

export type CrawlerBlueprintTestReport =
  | Record<string, unknown>
  | Array<Record<string, unknown>>
  | string
  | null;

export interface CrawlerBlueprintGenerationTask {
  id: number;
  blueprintCode: string;
  status: CrawlerBlueprintTaskStatus;
  startedAt?: string | null;
  finishedAt?: string | null;
  errorMessage?: string | null;
  browserSnapshot?: Record<string, unknown> | null;
  sampleData?: Array<Record<string, unknown>> | null;
  inputPayload?: Record<string, unknown> | null;
}

export interface CrawlerBlueprintDetail {
  summary: CrawlerBlueprintSummary;
  draftConfig?: string | null;
  lastTestReport?: CrawlerBlueprintTestReport;
  recentTasks: CrawlerBlueprintGenerationTask[];
}

export interface CreateCrawlerBlueprintPayload {
  code?: string;
  name?: string;
  entryUrl: string;
  searchKeywords?: string;
  excludeSelectors?: string[];
  notes?: string;
}

export interface ActivateCrawlerBlueprintPayload {
  code: string;
  enable: boolean;
}

export interface RerunCrawlerBlueprintPayload {
  code: string;
  name?: string;
  entryUrl?: string;
  searchKeywords?: string;
  excludeSelectors?: string[];
  notes?: string;
}
