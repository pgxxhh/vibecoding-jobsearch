<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/page.tsx" />
              <option name="originalContent" value="'use client';&#10;import { useQuery } from '@tanstack/react-query';&#10;import JobCard from '@/components/JobCard';&#10;import type { JobsResponse } from '@/lib/types';&#10;import { useMemo, useRef, useState } from 'react';&#10;&#10;async function fetchJobs(params: Record&lt;string, any&gt;): Promise&lt;JobsResponse&gt; {&#10;  const qs = new URLSearchParams(Object.entries(params).filter(([,v]) =&gt; v !== '' &amp;&amp; v !== undefined) as any);&#10;  const res = await fetch('/api/jobs?' + qs.toString(), { cache: 'no-store' });&#10;  if (!res.ok) throw new Error('Failed to fetch jobs');&#10;  return res.json();&#10;}&#10;&#10;function SubscriptionModal({ visible, onConfirm, onCancel, params }: { visible: boolean, onConfirm: () =&gt; void, onCancel: () =&gt; void, params: Record&lt;string, any&gt; }) {&#10;  if (!visible) return null;&#10;  return (&#10;    &lt;div className=&quot;fixed inset-0 bg-brand-900/20 backdrop-blur-sm flex items-center justify-center z-50 px-4&quot;&gt;&#10;      &lt;div className=&quot;relative bg-white/95 rounded-2xl shadow-glow border border-brand-100 p-6 w-full max-w-md&quot;&gt;&#10;        &lt;button className=&quot;absolute top-3 right-3 text-brand-300 hover:text-brand-500&quot; onClick={onCancel}&gt;×&lt;/button&gt;&#10;        &lt;h2 className=&quot;text-xl font-bold text-brand-800 mb-2&quot;&gt;创建订阅提醒&lt;/h2&gt;&#10;        &lt;p className=&quot;mb-4 text-brand-500&quot;&gt;创建一个订阅，第一时间收到最新职位推送。你可以在个人中心管理订阅。&lt;/p&gt;&#10;        &lt;div className=&quot;border border-brand-100 rounded-xl p-4 mb-5 bg-brand-50/80&quot;&gt;&#10;          &lt;div className=&quot;font-semibold text-brand-700&quot;&gt;搜索条件：&lt;/div&gt;&#10;          &lt;div&gt;关键词：{params.q || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;公司：{params.company || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;地点：{params.location || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;级别：{params.level || '不限'}&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex gap-3 justify-end&quot;&gt;&#10;          &lt;button className=&quot;btn btn-ghost&quot; onClick={onCancel}&gt;取消&lt;/button&gt;&#10;          &lt;button className=&quot;btn btn-primary&quot; onClick={onConfirm}&gt;确认订阅&lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function FilterDrawer({ visible, onClose, filters, setFilters, onApply }: {&#10;  visible: boolean,&#10;  onClose: () =&gt; void,&#10;  filters: any,&#10;  setFilters: (f: any) =&gt; void,&#10;  onApply: () =&gt; void&#10;}) {&#10;  if (!visible) return null;&#10;  return (&#10;    &lt;div className=&quot;w-full max-w-xs shadow-glow p-6 relative bg-white/95 rounded-2xl border border-brand-100&quot;&gt;&#10;      &lt;button className=&quot;absolute top-4 right-4 text-brand-300 hover:text-brand-500&quot; onClick={onClose}&gt;×&lt;/button&gt;&#10;      &lt;h2 className=&quot;text-lg font-bold mb-4 text-brand-800&quot;&gt;筛选职位&lt;/h2&gt;&#10;      &lt;div className=&quot;space-y-4&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;公司&lt;/label&gt;&#10;          &lt;input className=&quot;input w-full&quot; value={filters.company} onChange={e =&gt; setFilters({ ...filters, company: e.target.value })} placeholder=&quot;公司&quot; /&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;级别&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.level} onChange={e =&gt; setFilters({ ...filters, level: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;Junior&quot;&gt;Junior&lt;/option&gt;&#10;            &lt;option value=&quot;Mid&quot;&gt;Mid&lt;/option&gt;&#10;            &lt;option value=&quot;Senior&quot;&gt;Senior&lt;/option&gt;&#10;            &lt;option value=&quot;Staff&quot;&gt;Staff&lt;/option&gt;&#10;            &lt;option value=&quot;Principal&quot;&gt;Principal&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;远程&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.remote} onChange={e =&gt; setFilters({ ...filters, remote: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;true&quot;&gt;远程&lt;/option&gt;&#10;            &lt;option value=&quot;false&quot;&gt;非远程&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;薪资下限&lt;/label&gt;&#10;          &lt;input className=&quot;input w-full&quot; type=&quot;number&quot; value={filters.salaryMin} onChange={e =&gt; setFilters({ ...filters, salaryMin: e.target.value })} placeholder=&quot;最低薪资&quot; /&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;发布日期&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.datePosted} onChange={e =&gt; setFilters({ ...filters, datePosted: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;1&quot;&gt;1天内&lt;/option&gt;&#10;            &lt;option value=&quot;3&quot;&gt;3天内&lt;/option&gt;&#10;            &lt;option value=&quot;7&quot;&gt;7天内&lt;/option&gt;&#10;            &lt;option value=&quot;30&quot;&gt;30天内&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;mt-6 flex gap-3 justify-end&quot;&gt;&#10;        &lt;button className=&quot;btn btn-ghost&quot; onClick={onClose}&gt;取消&lt;/button&gt;&#10;        &lt;button className=&quot;btn btn-primary&quot; onClick={onApply}&gt;应用&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function JobDetail({ job }: { job: any }) {&#10;  if (!job) return (&#10;    &lt;div className=&quot;flex items-center justify-center h-full text-brand-300 text-lg&quot;&gt;请选择左侧职位查看详情&lt;/div&gt;&#10;  );&#10;  return (&#10;    &lt;div className=&quot;p-6&quot;&gt;&#10;      &lt;h2 className=&quot;text-2xl font-bold mb-2 text-brand-800&quot;&gt;{job.title}&lt;/h2&gt;&#10;      &lt;div className=&quot;text-brand-500 mb-2&quot;&gt;{job.company} · {job.location} {job.level ? `· ${job.level}` : ''}&lt;/div&gt;&#10;      &lt;div className=&quot;mb-2 text-xs text-brand-400&quot;&gt;{new Date(job.postedAt).toLocaleDateString()}&lt;/div&gt;&#10;      &lt;div className=&quot;mb-4&quot;&gt;&#10;        &lt;span className=&quot;font-semibold text-brand-700&quot;&gt;标签：&lt;/span&gt;&#10;        {(job.tags ?? []).map((t: string) =&gt; &lt;span key={t} className=&quot;badge mr-1&quot;&gt;{t}&lt;/span&gt;)}&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;mb-4&quot;&gt;&#10;        &lt;span className=&quot;font-semibold text-brand-700&quot;&gt;描述：&lt;/span&gt;&#10;        &lt;div className=&quot;mt-1 whitespace-pre-line text-sm text-brand-600&quot;&gt;{job.description || '无详细描述'}&lt;/div&gt;&#10;      &lt;/div&gt;&#10;      {/* 可扩展更多详情字段 */}&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function TopSearchBar({ q, setQ, location, setLocation, onSearch, onReset, onShowFilter, onShowSubscription, showFilterDrawer, setShowFilterDrawer, filters, setFilters }: {&#10;  q: string;&#10;  setQ: (v: string) =&gt; void;&#10;  location: string;&#10;  setLocation: (v: string) =&gt; void;&#10;  onSearch: (e: React.FormEvent) =&gt; void;&#10;  onReset: () =&gt; void;&#10;  onShowFilter: () =&gt; void;&#10;  onShowSubscription: () =&gt; void;&#10;  showFilterDrawer: boolean;&#10;  setShowFilterDrawer: (v: boolean) =&gt; void;&#10;  filters: any;&#10;  setFilters: (f: any) =&gt; void;&#10;}) {&#10;  return (&#10;    &lt;div className=&quot;sticky top-0 z-20 w-full bg-white/80 backdrop-blur border-b border-brand-100 shadow-glow&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto flex items-center gap-4 px-6 py-4&quot;&gt;&#10;        &lt;form className=&quot;flex flex-1 gap-3 items-center&quot; onSubmit={onSearch}&gt;&#10;          &lt;input className=&quot;input flex-1&quot; placeholder=&quot;关键词 (如: backend, Java)&quot; value={q} onChange={e =&gt; setQ(e.target.value)} /&gt;&#10;          &lt;input className=&quot;input flex-1&quot; placeholder=&quot;地点&quot; value={location} onChange={e =&gt; setLocation(e.target.value)} /&gt;&#10;          &lt;button className=&quot;btn btn-ghost&quot; type=&quot;button&quot; onClick={onReset}&gt;重置&lt;/button&gt;&#10;          &lt;button className=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;搜索&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        &lt;div className=&quot;relative inline-block&quot;&gt;&#10;          &lt;button className=&quot;btn btn-outline flex items-center gap-1&quot; type=&quot;button&quot; onClick={onShowFilter}&gt;&#10;            &lt;svg width=&quot;22&quot; height=&quot;22&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot;&gt;&lt;line x1=&quot;4&quot; y1=&quot;21&quot; x2=&quot;4&quot; y2=&quot;14&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;4&quot; y1=&quot;10&quot; x2=&quot;4&quot; y2=&quot;3&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;21&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;15&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;20&quot; y1=&quot;21&quot; x2=&quot;20&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;20&quot; y1=&quot;12&quot; x2=&quot;20&quot; y2=&quot;3&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;1&quot; y1=&quot;14&quot; x2=&quot;7&quot; y2=&quot;14&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;9&quot; y1=&quot;8&quot; x2=&quot;15&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;17&quot; y1=&quot;16&quot; x2=&quot;23&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&#10;            筛选&#10;          &lt;/button&gt;&#10;          {showFilterDrawer &amp;&amp; (&#10;            &lt;div style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000, width: 360, boxShadow: '0 20px 40px rgba(245, 77, 146, 0.25)', background: 'rgba(255, 245, 248, 0.95)', borderRadius: 16, marginTop: 12, border: '1px solid rgba(255, 207, 224, 0.7)', backdropFilter: 'blur(12px)' }}&gt;&#10;              &lt;FilterDrawer&#10;                visible={showFilterDrawer}&#10;                onClose={() =&gt; setShowFilterDrawer(false)}&#10;                filters={filters}&#10;                setFilters={setFilters}&#10;                onApply={() =&gt; setShowFilterDrawer(false)}&#10;              /&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;        &lt;button className=&quot;flex items-center gap-2 btn btn-outline&quot; type=&quot;button&quot; onClick={onShowSubscription}&gt;&#10;          &lt;svg width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; className=&quot;icon-bell&quot; style={{display: 'inline', verticalAlign: 'middle'}}&gt;&#10;            &lt;path d=&quot;M18 8a6 6 0 0 0-12 0c0 7-3 9-3 9h18s-3-2-3-9&quot;&gt;&lt;/path&gt;&#10;            &lt;path d=&quot;M13.73 21a2 2 0 0 1-3.46 0&quot;&gt;&lt;/path&gt;&#10;          &lt;/svg&gt;&#10;          创建订阅提醒&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default function Page() {&#10;  const [q, setQ] = useState('');&#10;  const [location, setLocation] = useState('');&#10;  const [page, setPage] = useState(1);&#10;  const size = 10;&#10;  // 筛选弹窗相关状态&#10;  const [showFilterDrawer, setShowFilterDrawer] = useState(false);&#10;  const [filters, setFilters] = useState({ company: '', level: '', remote: '', salaryMin: '', datePosted: '' });&#10;  const [showSubscriptionModal, setShowSubscriptionModal] = useState(false);&#10;  const hasPromptedSubscription = useRef(false);&#10;  const [subscriptionTrigger, setSubscriptionTrigger] = useState&lt;'search' | 'manual' | null&gt;(null);&#10;  const [selectedJob, setSelectedJob] = useState&lt;any&gt;(null);&#10;&#10;  const params = useMemo(() =&gt; ({ q, location, page, size, ...filters }), [q, location, page, size, filters]);&#10;  const { data, isLoading, isError, error, refetch, isFetching } = useQuery({&#10;    queryKey: ['jobs', params],&#10;    queryFn: () =&gt; fetchJobs(params),&#10;    keepPreviousData: true,&#10;  });&#10;&#10;  const handleSearch = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setPage(1);&#10;    if (!hasPromptedSubscription.current) {&#10;      setShowSubscriptionModal(true);&#10;      setSubscriptionTrigger('search');&#10;      hasPromptedSubscription.current = true;&#10;    } else {&#10;      refetch();&#10;    }&#10;  };&#10;&#10;  const handleManualSubscription = () =&gt; {&#10;    setShowSubscriptionModal(true);&#10;    setSubscriptionTrigger('manual');&#10;  };&#10;&#10;  const handleConfirmSubscription = async () =&gt; {&#10;    setShowSubscriptionModal(false);&#10;    setSubscriptionTrigger(null);&#10;    // 调用订阅接口&#10;    await fetch('/api/subscription', {&#10;      method: 'POST',&#10;      headers: { 'Content-Type': 'application/json' },&#10;      body: JSON.stringify(params),&#10;    });&#10;    refetch();&#10;  };&#10;&#10;  const handleCancelSubscription = () =&gt; {&#10;    setShowSubscriptionModal(false);&#10;    setSubscriptionTrigger(null);&#10;    if (subscriptionTrigger === 'search') refetch();&#10;  };&#10;&#10;  const handleApplyFilters = () =&gt; {&#10;    setShowFilterDrawer(false);&#10;    setPage(1);&#10;    refetch();&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;w-full h-full&quot;&gt;&#10;      &lt;TopSearchBar&#10;        q={q}&#10;        setQ={setQ}&#10;        location={location}&#10;        setLocation={setLocation}&#10;        onSearch={handleSearch}&#10;        onReset={() =&gt; { setQ(''); setLocation(''); setPage(1); setFilters({ company: '', level: '', remote: '', salaryMin: '', datePosted: '' }); }}&#10;        onShowFilter={() =&gt; setShowFilterDrawer(true)}&#10;        onShowSubscription={handleManualSubscription}&#10;        showFilterDrawer={showFilterDrawer}&#10;        setShowFilterDrawer={setShowFilterDrawer}&#10;        filters={filters}&#10;        setFilters={setFilters}&#10;      /&gt;&#10;      &lt;div className=&quot;flex gap-6 h-[calc(100vh-64px)] pt-6 px-6&quot;&gt;&#10;        {/* 左侧列表区 */}&#10;        &lt;div className=&quot;flex-1 min-w-[340px] max-w-[480px] overflow-y-auto border border-brand-100 rounded-3xl bg-white/70 backdrop-blur&quot;&gt;&#10;          &lt;section className=&quot;space-y-3 p-5&quot;&gt;&#10;            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;              &lt;h2 className=&quot;text-sm text-brand-500&quot;&gt;&#10;                {isLoading ? 'Loading...' : `${data?.total ?? 0} results`}&#10;                {isFetching &amp;&amp; !isLoading ? ' · refreshing' : ''}&#10;              &lt;/h2&gt;&#10;              &lt;div className=&quot;text-xs text-brand-400&quot;&gt;Page {data?.page ?? page}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {isError &amp;&amp; &lt;div className=&quot;card p-4 text-brand-700&quot;&gt;Error: {(error as Error).message}&lt;/div&gt;}&#10;            &lt;div className=&quot;grid gap-3&quot;&gt;&#10;              {(data?.items ?? []).map((job) =&gt; (&#10;                &lt;div&#10;                  key={job.id}&#10;                  className={`cursor-pointer rounded-2xl border transition ${selectedJob?.id === job.id ? 'border-brand-500 bg-brand-100/80 shadow-glow' : 'border-transparent hover:border-brand-200/80 bg-white/60'}`}&#10;                  onClick={() =&gt; setSelectedJob(job)}&#10;                &gt;&#10;                  &lt;JobCard job={job} /&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex items-center justify-between pt-2&quot;&gt;&#10;              &lt;button className=&quot;btn btn-outline&quot; disabled={(data?.page ?? 1) &lt;= 1} onClick={() =&gt; setPage((p) =&gt; Math.max(1, p - 1))}&gt;&#10;                Previous&#10;              &lt;/button&gt;&#10;              &lt;button className=&quot;btn btn-outline&quot; disabled={((data?.page ?? 1) * (data?.size ?? size)) &gt;= (data?.total ?? 0)} onClick={() =&gt; setPage((p) =&gt; p + 1)}&gt;&#10;                Next&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/section&gt;&#10;        &lt;/div&gt;&#10;        {/* 右侧详情区 */}&#10;        &lt;div className=&quot;flex-[2] min-w-[400px] max-w-[800px] h-full overflow-y-auto border border-brand-100 rounded-3xl bg-white/80 backdrop-blur shadow-glow&quot;&gt;&#10;          &lt;JobDetail job={selectedJob} /&gt;&#10;        &lt;/div&gt;&#10;        {/* 弹窗和抽屉组件 */}&#10;        &lt;SubscriptionModal&#10;          visible={showSubscriptionModal}&#10;          onConfirm={handleConfirmSubscription}&#10;          onCancel={handleCancelSubscription}&#10;          params={params}&#10;        /&gt;&#10;        {/* FilterDrawer 已在 TopSearchBar 绝对定位弹窗中渲染，这里不再重复渲染 */}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client';&#10;import { useQuery } from '@tanstack/react-query';&#10;import JobCard from '@/components/JobCard';&#10;import type { JobsResponse } from '@/lib/types';&#10;import { useMemo, useRef, useState } from 'react';&#10;&#10;async function fetchJobs(params: Record&lt;string, any&gt;): Promise&lt;JobsResponse&gt; {&#10;  const qs = new URLSearchParams(Object.entries(params).filter(([,v]) =&gt; v !== '' &amp;&amp; v !== undefined) as any);&#10;  const res = await fetch('/api/jobs?' + qs.toString(), { cache: 'no-store' });&#10;  if (!res.ok) throw new Error('Failed to fetch jobs');&#10;  return res.json();&#10;}&#10;&#10;function SubscriptionModal({ visible, onConfirm, onCancel, params }: { visible: boolean, onConfirm: () =&gt; void, onCancel: () =&gt; void, params: Record&lt;string, any&gt; }) {&#10;  if (!visible) return null;&#10;  return (&#10;    &lt;div className=&quot;fixed inset-0 bg-brand-900/20 backdrop-blur-sm flex items-center justify-center z-50 px-4&quot;&gt;&#10;      &lt;div className=&quot;relative bg-white/95 rounded-2xl shadow-glow border border-brand-100 p-6 w-full max-w-md&quot;&gt;&#10;        &lt;button className=&quot;absolute top-3 right-3 text-brand-300 hover:text-brand-500&quot; onClick={onCancel}&gt;×&lt;/button&gt;&#10;        &lt;h2 className=&quot;text-xl font-bold text-brand-800 mb-2&quot;&gt;创建订阅提醒&lt;/h2&gt;&#10;        &lt;p className=&quot;mb-4 text-brand-500&quot;&gt;创建一个订阅，第一时间收到最新职位推送。你可以在个人中心管理订阅。&lt;/p&gt;&#10;        &lt;div className=&quot;border border-brand-100 rounded-xl p-4 mb-5 bg-brand-50/80&quot;&gt;&#10;          &lt;div className=&quot;font-semibold text-brand-700&quot;&gt;搜索条件：&lt;/div&gt;&#10;          &lt;div&gt;关键词：{params.q || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;公司：{params.company || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;地点：{params.location || '不限'}&lt;/div&gt;&#10;          &lt;div&gt;级别：{params.level || '不限'}&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex gap-3 justify-end&quot;&gt;&#10;          &lt;button className=&quot;btn btn-ghost&quot; onClick={onCancel}&gt;取消&lt;/button&gt;&#10;          &lt;button className=&quot;btn btn-primary&quot; onClick={onConfirm}&gt;确认订阅&lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function FilterDrawer({ visible, onClose, filters, setFilters, onApply }: {&#10;  visible: boolean,&#10;  onClose: () =&gt; void,&#10;  filters: any,&#10;  setFilters: (f: any) =&gt; void,&#10;  onApply: () =&gt; void&#10;}) {&#10;  if (!visible) return null;&#10;  return (&#10;    &lt;div className=&quot;w-full max-w-xs shadow-glow p-6 relative bg-white/95 rounded-2xl border border-brand-100&quot;&gt;&#10;      &lt;button className=&quot;absolute top-4 right-4 text-brand-300 hover:text-brand-500&quot; onClick={onClose}&gt;×&lt;/button&gt;&#10;      &lt;h2 className=&quot;text-lg font-bold mb-4 text-brand-800&quot;&gt;筛选职位&lt;/h2&gt;&#10;      &lt;div className=&quot;space-y-4&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;公司&lt;/label&gt;&#10;          &lt;input className=&quot;input w-full&quot; value={filters.company} onChange={e =&gt; setFilters({ ...filters, company: e.target.value })} placeholder=&quot;公司&quot; /&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;级别&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.level} onChange={e =&gt; setFilters({ ...filters, level: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;Junior&quot;&gt;Junior&lt;/option&gt;&#10;            &lt;option value=&quot;Mid&quot;&gt;Mid&lt;/option&gt;&#10;            &lt;option value=&quot;Senior&quot;&gt;Senior&lt;/option&gt;&#10;            &lt;option value=&quot;Staff&quot;&gt;Staff&lt;/option&gt;&#10;            &lt;option value=&quot;Principal&quot;&gt;Principal&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;远程&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.remote} onChange={e =&gt; setFilters({ ...filters, remote: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;true&quot;&gt;远程&lt;/option&gt;&#10;            &lt;option value=&quot;false&quot;&gt;非远程&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;薪资下限&lt;/label&gt;&#10;          &lt;input className=&quot;input w-full&quot; type=&quot;number&quot; value={filters.salaryMin} onChange={e =&gt; setFilters({ ...filters, salaryMin: e.target.value })} placeholder=&quot;最低薪资&quot; /&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;label className=&quot;block text-sm font-medium mb-1 text-brand-600&quot;&gt;发布日期&lt;/label&gt;&#10;          &lt;select className=&quot;select w-full&quot; value={filters.datePosted} onChange={e =&gt; setFilters({ ...filters, datePosted: e.target.value })}&gt;&#10;            &lt;option value=&quot;&quot;&gt;不限&lt;/option&gt;&#10;            &lt;option value=&quot;1&quot;&gt;1天内&lt;/option&gt;&#10;            &lt;option value=&quot;3&quot;&gt;3天内&lt;/option&gt;&#10;            &lt;option value=&quot;7&quot;&gt;7天内&lt;/option&gt;&#10;            &lt;option value=&quot;30&quot;&gt;30天内&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;mt-6 flex gap-3 justify-end&quot;&gt;&#10;        &lt;button className=&quot;btn btn-ghost&quot; onClick={onClose}&gt;取消&lt;/button&gt;&#10;        &lt;button className=&quot;btn btn-primary&quot; onClick={onApply}&gt;应用&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function JobDetail({ job }: { job: any }) {&#10;  if (!job) return (&#10;    &lt;div className=&quot;flex items-center justify-center h-full text-brand-300 text-lg&quot;&gt;请选择左侧职位查看详情&lt;/div&gt;&#10;  );&#10;  return (&#10;    &lt;div className=&quot;p-6&quot;&gt;&#10;      &lt;h2 className=&quot;text-2xl font-bold mb-2 text-brand-800&quot;&gt;{job.title}&lt;/h2&gt;&#10;      &lt;div className=&quot;text-brand-500 mb-2&quot;&gt;{job.company} · {job.location} {job.level ? `· ${job.level}` : ''}&lt;/div&gt;&#10;      &lt;div className=&quot;mb-2 text-xs text-brand-400&quot;&gt;{new Date(job.postedAt).toLocaleDateString()}&lt;/div&gt;&#10;      &lt;div className=&quot;mb-4&quot;&gt;&#10;        &lt;span className=&quot;font-semibold text-brand-700&quot;&gt;标签：&lt;/span&gt;&#10;        {(job.tags ?? []).map((t: string) =&gt; &lt;span key={t} className=&quot;badge mr-1&quot;&gt;{t}&lt;/span&gt;)}&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;mb-4&quot;&gt;&#10;        &lt;span className=&quot;font-semibold text-brand-700&quot;&gt;描述：&lt;/span&gt;&#10;        &lt;div className=&quot;mt-1 whitespace-pre-line text-sm text-brand-600&quot;&gt;{job.description || '无详细描述'}&lt;/div&gt;&#10;      &lt;/div&gt;&#10;      {/* 可扩展更多详情字段 */}&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;function TopSearchBar({ q, setQ, location, setLocation, onSearch, onReset, onShowFilter, onShowSubscription, showFilterDrawer, setShowFilterDrawer, filters, setFilters }: {&#10;  q: string;&#10;  setQ: (v: string) =&gt; void;&#10;  location: string;&#10;  setLocation: (v: string) =&gt; void;&#10;  onSearch: (e: React.FormEvent) =&gt; void;&#10;  onReset: () =&gt; void;&#10;  onShowFilter: () =&gt; void;&#10;  onShowSubscription: () =&gt; void;&#10;  showFilterDrawer: boolean;&#10;  setShowFilterDrawer: (v: boolean) =&gt; void;&#10;  filters: any;&#10;  setFilters: (f: any) =&gt; void;&#10;}) {&#10;  return (&#10;    &lt;div className=&quot;sticky top-0 z-20 w-full bg-white/80 backdrop-blur border-b border-brand-100 shadow-glow&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto flex items-center gap-4 px-6 py-4&quot;&gt;&#10;        &lt;form className=&quot;flex flex-1 gap-3 items-center&quot; onSubmit={onSearch}&gt;&#10;          &lt;input className=&quot;input flex-1&quot; placeholder=&quot;关键词 (如: backend, Java)&quot; value={q} onChange={e =&gt; setQ(e.target.value)} /&gt;&#10;          &lt;input className=&quot;input flex-1&quot; placeholder=&quot;地点&quot; value={location} onChange={e =&gt; setLocation(e.target.value)} /&gt;&#10;          &lt;button className=&quot;btn btn-ghost&quot; type=&quot;button&quot; onClick={onReset}&gt;重置&lt;/button&gt;&#10;          &lt;button className=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;搜索&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        &lt;div className=&quot;relative inline-block&quot;&gt;&#10;          &lt;button className=&quot;btn btn-outline flex items-center gap-1&quot; type=&quot;button&quot; onClick={onShowFilter}&gt;&#10;            &lt;svg width=&quot;22&quot; height=&quot;22&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot;&gt;&lt;line x1=&quot;4&quot; y1=&quot;21&quot; x2=&quot;4&quot; y2=&quot;14&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;4&quot; y1=&quot;10&quot; x2=&quot;4&quot; y2=&quot;3&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;21&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;15&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;20&quot; y1=&quot;21&quot; x2=&quot;20&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;20&quot; y1=&quot;12&quot; x2=&quot;20&quot; y2=&quot;3&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;1&quot; y1=&quot;14&quot; x2=&quot;7&quot; y2=&quot;14&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;9&quot; y1=&quot;8&quot; x2=&quot;15&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;17&quot; y1=&quot;16&quot; x2=&quot;23&quot; y2=&quot;16&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&#10;            筛选&#10;          &lt;/button&gt;&#10;          {showFilterDrawer &amp;&amp; (&#10;            &lt;div style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1000, width: 360, boxShadow: '0 20px 40px rgba(245, 77, 146, 0.25)', background: 'transparent', borderRadius: 16, marginTop: 12, border: 'none', backdropFilter: 'blur(12px)' }}&gt;&#10;              &lt;FilterDrawer&#10;                visible={showFilterDrawer}&#10;                onClose={() =&gt; setShowFilterDrawer(false)}&#10;                filters={filters}&#10;                setFilters={setFilters}&#10;                onApply={() =&gt; setShowFilterDrawer(false)}&#10;              /&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;        &lt;button className=&quot;flex items-center gap-2 btn btn-outline&quot; type=&quot;button&quot; onClick={onShowSubscription}&gt;&#10;          &lt;svg width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; className=&quot;icon-bell&quot; style={{display: 'inline', verticalAlign: 'middle'}}&gt;&#10;            &lt;path d=&quot;M18 8a6 6 0 0 0-12 0c0 7-3 9-3 9h18s-3-2-3-9&quot;&gt;&lt;/path&gt;&#10;            &lt;path d=&quot;M13.73 21a2 2 0 0 1-3.46 0&quot;&gt;&lt;/path&gt;&#10;          &lt;/svg&gt;&#10;          创建订阅提醒&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default function Page() {&#10;  const [q, setQ] = useState('');&#10;  const [location, setLocation] = useState('');&#10;  const [page, setPage] = useState(1);&#10;  const size = 10;&#10;  // 筛选弹窗相关状态&#10;  const [showFilterDrawer, setShowFilterDrawer] = useState(false);&#10;  const [filters, setFilters] = useState({ company: '', level: '', remote: '', salaryMin: '', datePosted: '' });&#10;  const [showSubscriptionModal, setShowSubscriptionModal] = useState(false);&#10;  const hasPromptedSubscription = useRef(false);&#10;  const [subscriptionTrigger, setSubscriptionTrigger] = useState&lt;'search' | 'manual' | null&gt;(null);&#10;  const [selectedJob, setSelectedJob] = useState&lt;any&gt;(null);&#10;&#10;  const params = useMemo(() =&gt; ({ q, location, page, size, ...filters }), [q, location, page, size, filters]);&#10;  const { data, isLoading, isError, error, refetch, isFetching } = useQuery({&#10;    queryKey: ['jobs', params],&#10;    queryFn: () =&gt; fetchJobs(params),&#10;    keepPreviousData: true,&#10;  });&#10;&#10;  const handleSearch = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setPage(1);&#10;    if (!hasPromptedSubscription.current) {&#10;      setShowSubscriptionModal(true);&#10;      setSubscriptionTrigger('search');&#10;      hasPromptedSubscription.current = true;&#10;    } else {&#10;      refetch();&#10;    }&#10;  };&#10;&#10;  const handleManualSubscription = () =&gt; {&#10;    setShowSubscriptionModal(true);&#10;    setSubscriptionTrigger('manual');&#10;  };&#10;&#10;  const handleConfirmSubscription = async () =&gt; {&#10;    setShowSubscriptionModal(false);&#10;    setSubscriptionTrigger(null);&#10;    // 调用订阅接口&#10;    await fetch('/api/subscription', {&#10;      method: 'POST',&#10;      headers: { 'Content-Type': 'application/json' },&#10;      body: JSON.stringify(params),&#10;    });&#10;    refetch();&#10;  };&#10;&#10;  const handleCancelSubscription = () =&gt; {&#10;    setShowSubscriptionModal(false);&#10;    setSubscriptionTrigger(null);&#10;    if (subscriptionTrigger === 'search') refetch();&#10;  };&#10;&#10;  const handleApplyFilters = () =&gt; {&#10;    setShowFilterDrawer(false);&#10;    setPage(1);&#10;    refetch();&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;w-full h-full&quot;&gt;&#10;      &lt;TopSearchBar&#10;        q={q}&#10;        setQ={setQ}&#10;        location={location}&#10;        setLocation={setLocation}&#10;        onSearch={handleSearch}&#10;        onReset={() =&gt; { setQ(''); setLocation(''); setPage(1); setFilters({ company: '', level: '', remote: '', salaryMin: '', datePosted: '' }); }}&#10;        onShowFilter={() =&gt; setShowFilterDrawer(true)}&#10;        onShowSubscription={handleManualSubscription}&#10;        showFilterDrawer={showFilterDrawer}&#10;        setShowFilterDrawer={setShowFilterDrawer}&#10;        filters={filters}&#10;        setFilters={setFilters}&#10;      /&gt;&#10;      &lt;div className=&quot;flex gap-6 h-[calc(100vh-64px)] pt-6 px-6&quot;&gt;&#10;        {/* 左侧列表区 */}&#10;        &lt;div className=&quot;flex-1 min-w-[340px] max-w-[480px] overflow-y-auto border border-brand-100 rounded-3xl bg-white/70 backdrop-blur&quot;&gt;&#10;          &lt;section className=&quot;space-y-3 p-5&quot;&gt;&#10;            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;              &lt;h2 className=&quot;text-sm text-brand-500&quot;&gt;&#10;                {isLoading ? 'Loading...' : `${data?.total ?? 0} results`}&#10;                {isFetching &amp;&amp; !isLoading ? ' · refreshing' : ''}&#10;              &lt;/h2&gt;&#10;              &lt;div className=&quot;text-xs text-brand-400&quot;&gt;Page {data?.page ?? page}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {isError &amp;&amp; &lt;div className=&quot;card p-4 text-brand-700&quot;&gt;Error: {(error as Error).message}&lt;/div&gt;}&#10;            &lt;div className=&quot;grid gap-3&quot;&gt;&#10;              {(data?.items ?? []).map((job) =&gt; (&#10;                &lt;div&#10;                  key={job.id}&#10;                  className={`cursor-pointer rounded-2xl border transition ${selectedJob?.id === job.id ? 'border-brand-500 bg-brand-100/80 shadow-glow' : 'border-transparent hover:border-brand-200/80 bg-white/60'}`}&#10;                  onClick={() =&gt; setSelectedJob(job)}&#10;                &gt;&#10;                  &lt;JobCard job={job} /&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex items-center justify-between pt-2&quot;&gt;&#10;              &lt;button className=&quot;btn btn-outline&quot; disabled={(data?.page ?? 1) &lt;= 1} onClick={() =&gt; setPage((p) =&gt; Math.max(1, p - 1))}&gt;&#10;                Previous&#10;              &lt;/button&gt;&#10;              &lt;button className=&quot;btn btn-outline&quot; disabled={((data?.page ?? 1) * (data?.size ?? size)) &gt;= (data?.total ?? 0)} onClick={() =&gt; setPage((p) =&gt; p + 1)}&gt;&#10;                Next&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/section&gt;&#10;        &lt;/div&gt;&#10;        {/* 右侧详情区 */}&#10;        &lt;div className=&quot;flex-[2] min-w-[400px] max-w-[800px] h-full overflow-y-auto border border-brand-100 rounded-3xl bg-white/80 backdrop-blur shadow-glow&quot;&gt;&#10;          &lt;JobDetail job={selectedJob} /&gt;&#10;        &lt;/div&gt;&#10;        {/* 弹窗和抽屉组件 */}&#10;        &lt;SubscriptionModal&#10;          visible={showSubscriptionModal}&#10;          onConfirm={handleConfirmSubscription}&#10;          onCancel={handleCancelSubscription}&#10;          params={params}&#10;        /&gt;&#10;        {/* FilterDrawer 已在 TopSearchBar 绝对定位弹窗中渲染，这里不再重复渲染 */}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>