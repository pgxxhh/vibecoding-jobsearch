name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build backend
        working-directory: vibe-jobs-aggregator
        env:
          MAVEN_OPTS: ""
        run: mvn -B verify -DskipTests

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.10.0

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm
          cache-dependency-path: vibe-jobs-view/pnpm-lock.yaml

      - name: Install frontend dependencies
        working-directory: vibe-jobs-view
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: vibe-jobs-view
        env:
          NEXT_PUBLIC_BACKEND_BASE: /api
        run: pnpm build

  deploy:
    name: Deploy via SSH
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy on host
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            BRANCH='${{ github.ref_name }}'

            # Get the value and strip accidental surrounding quotes
            DSN='${{ vars.SPRING_DATASOURCE_URL }}'
            DSN="${DSN%\"}"; DSN="${DSN#\"}"
            DSN="${DSN%\'}"; DSN="${DSN#\'}"

            if [ -z "$DSN" ]; then
              echo "Missing SPRING_DATASOURCE_URL repository variable" >&2
              exit 1
            fi

            # Ensure target directory exists (home path)
            mkdir -p /home/ec2-user/app
            cd /home/ec2-user/app

            # Write .env.production without sudo under home directory
            tee .env.production >/dev/null <<EOF
            SPRING_PROFILES_ACTIVE=${{ vars.SPRING_PROFILES_ACTIVE || 'mysql,prod' }}
            SPRING_DATASOURCE_URL=$DSN
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            SPRING_JPA_DATABASE_PLATFORM=${{ vars.SPRING_JPA_DATABASE_PLATFORM || 'org.hibernate.dialect.MySQLDialect' }}
            SPRING_JPA_HIBERNATE_DDL_AUTO=${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO || 'validate' }}
            SPRING_FLYWAY_SCHEMAS=${{ vars.SPRING_FLYWAY_SCHEMAS || 'vibejobs' }}
            DOMAIN=${{ vars.DOMAIN || 'elainejobs.com' }}
            EMAIL=${{ vars.EMAIL || 'ops@example.com' }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}
            EOF

            chmod 600 .env.production

            # Run deploy script in the new path
            if [ ! -x ./deploy.sh ]; then
              echo "deploy.sh not found in /home/ec2-user/app or not executable" >&2
              exit 127
            fi
            ./deploy.sh "$BRANCH"
